{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kerim\\\\Desktop\\\\F-end\\\\frontend\\\\react\\\\react-project\\\\react-2\\\\src\\\\js-components\\\\Mainscreen\\\\Dialogs\\\\Dialogs.jsx\";\nimport DialogItem from \"./DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport DialogMessage from \"./DialogsMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  // let dialogsData = [\n  // \t{id: 1, name: 'Керим'},\n  // \t{id: 2, name: 'Ильяс'},\n  // \t{id: 3, name: 'Ибраим'},\n  // \t{id: 4, name: 'Ахмад'},\n  // \t{id: 5, name: 'Аким'},\n  // ]\n\n  // let messagesData = [\n  // \t{id: 1, message: 'Hello, how are you?'},\n  // \t{id: 2, message: 'Hi, i`m good'},\n  // ]\n\n  // let dialogsElements = dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>) \n  /*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n   далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n   Далее просто вставляем новый массив в нужный участок JSX разметки\r\n   и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\n  // let messagesElemets = messagesData.map( m => <DialogMessage message={m.message}/>)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs__row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n_c = Dialogs;\nexport default Dialogs;\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["DialogItem","s","DialogMessage","jsxDEV","_jsxDEV","Dialogs","props","className","dialogs__row","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/Mainscreen/Dialogs/Dialogs.jsx"],"sourcesContent":["import DialogItem from \"./DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogMessage from \"./DialogsMessage\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\t// let dialogsData = [\r\n\t// \t{id: 1, name: 'Керим'},\r\n\t// \t{id: 2, name: 'Ильяс'},\r\n\t// \t{id: 3, name: 'Ибраим'},\r\n\t// \t{id: 4, name: 'Ахмад'},\r\n\t// \t{id: 5, name: 'Аким'},\r\n\t// ]\r\n\r\n\t// let messagesData = [\r\n\t// \t{id: 1, message: 'Hello, how are you?'},\r\n\t// \t{id: 2, message: 'Hi, i`m good'},\r\n\t// ]\r\n\t\r\n\t// let dialogsElements = dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>) \r\n\t/*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n\t далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n\t Далее просто вставляем новый массив в нужный участок JSX разметки\r\n\t и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\r\n\t// let messagesElemets = messagesData.map( m => <DialogMessage message={m.message}/>)\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs__row}>\r\n\t\t\t{/* <div className={s.dialogs__items}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.dialogs__messages}>\r\n\t\t\t\t{messagesElemets}\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAE1B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;AACD;AACA;AACA;EACC;;EAEA,oBACCF,OAAA;IAAKG,SAAS,EAAEN,CAAC,CAACO;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAO1B,CAAC;AAER,CAAC;AAAAC,EAAA,GAhCKR,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}