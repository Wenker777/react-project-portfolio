{"ast":null,"code":"import { usersAPI } from \"../API/api\";\nlet initialState = {\n  postData: [{\n    id: 1,\n    likes: 15,\n    message: 'Hello, what`s your name and how old are you?'\n  }, {\n    id: 2,\n    likes: 20,\n    message: 'Hi, my name is Kerim and i`m 20 y.o.'\n  }],\n  newPostText: '',\n  profile: null\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // Изначально под именем state пришел profilePage при удовлетворении условия if он преобразовывается и возвращается через тот-же state\n  // rerender происходит не здесь\n\n  let stateCopy = {\n    ...state\n  };\n  let spaceCounter = 0;\n  let letterCounter = 0;\n  switch (action.type) {\n    case 'UPDATE-POST-TEXT':\n      let newTextWithParagraph = '';\n      for (let i of action.newText) {\n        newTextWithParagraph += i;\n      }\n      console.log(action.paragraph);\n      if (action.paragraph) {\n        newTextWithParagraph += \"\\n\";\n      }\n      stateCopy.newPostText = newTextWithParagraph;\n      return stateCopy;\n    case 'ADD-POST':\n      stateCopy.postData = [...state.postData];\n      // stateCopy = {\n      // \t...state,\n      // \tpostData: [...state.postData],\n      // \tnewPostText: {...state.newPostText},\n      // };\n\n      for (let l of stateCopy.newPostText) {\n        letterCounter += 1;\n        if (l === ' ') {\n          spaceCounter += 1;\n        } else if (l === \"\\n\") {\n          spaceCounter += 1;\n        }\n      }\n      let newPost = {\n        id: 3,\n        likes: 0,\n        message: stateCopy.newPostText\n      };\n      if (letterCounter !== spaceCounter && letterCounter >= 1) {\n        stateCopy.postData.unshift(newPost);\n      }\n      stateCopy.newPostText = '';\n      return stateCopy;\n    case 'SET-USER-PROFILE':\n      return {\n        ...state,\n        profile: action.profile\n      };\n    default:\n      return state;\n  }\n};\nexport let onPostChangeActionCreator = (textFromNewPost, paragraph) => {\n  console.log(textFromNewPost);\n  return {\n    type: 'UPDATE-POST-TEXT',\n    newText: textFromNewPost,\n    paragraph: paragraph\n  };\n};\nexport let addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport let setUserProfile = profile => {\n  return {\n    type: 'SET-USER-PROFILE',\n    profile\n  };\n};\nexport const getCurrentIdThunkCreator = currentUserId => dispatch => {\n  usersAPI.getCurrentId(currentUserId).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["usersAPI","initialState","postData","id","likes","message","newPostText","profile","profileReducer","state","arguments","length","undefined","action","stateCopy","spaceCounter","letterCounter","type","newTextWithParagraph","i","newText","console","log","paragraph","l","newPost","unshift","onPostChangeActionCreator","textFromNewPost","addPostActionCreator","setUserProfile","getCurrentIdThunkCreator","currentUserId","dispatch","getCurrentId","then","data"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/redux/profile-reducer.js"],"sourcesContent":["import { usersAPI } from \"../API/api\";\r\nlet initialState = {\r\n\tpostData: [\r\n\t\t{ id: 1, likes: 15, message: 'Hello, what`s your name and how old are you?' },\r\n\t\t{ id: 2, likes: 20, message: 'Hi, my name is Kerim and i`m 20 y.o.' },\r\n\t],\r\n\tnewPostText: '',\r\n\tprofile: null,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => { // Изначально под именем state пришел profilePage при удовлетворении условия if он преобразовывается и возвращается через тот-же state\r\n\t// rerender происходит не здесь\r\n\r\n\tlet stateCopy= {...state};\r\n\tlet spaceCounter = 0;\r\n\tlet letterCounter = 0;\r\n\tswitch (action.type) {\r\n\t\tcase 'UPDATE-POST-TEXT':\r\n\t\t\tlet newTextWithParagraph = '';\r\n\t\t\tfor(let i of action.newText){\r\n\t\t\t\t\tnewTextWithParagraph += i;\r\n\t\t\t}\r\n\t\t\tconsole.log(action.paragraph)\r\n\t\t\tif(action.paragraph){\r\n\t\t\t\tnewTextWithParagraph += \"\\n\"\r\n\t\t\t}\r\n\r\n\t\t\tstateCopy.newPostText = newTextWithParagraph;\r\n\t\t\treturn stateCopy;\r\n\r\n\t\tcase 'ADD-POST':\r\n\t\t\tstateCopy.postData = [...state.postData]\r\n\t\t\t// stateCopy = {\r\n\t\t\t// \t...state,\r\n\t\t\t// \tpostData: [...state.postData],\r\n\t\t\t// \tnewPostText: {...state.newPostText},\r\n\t\t\t// };\r\n\t\r\n\t\t\tfor(let l of stateCopy.newPostText){\r\n\t\t\t\tletterCounter += 1;\r\n\t\t\t\tif (l === ' '){\r\n\t\t\t\t\tspaceCounter += 1;\r\n\t\t\t\t} else if (l === \"\\n\"){\r\n\t\t\t\t\tspaceCounter += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 3,\r\n\t\t\t\tlikes: 0,\r\n\t\t\t\tmessage: stateCopy.newPostText,\r\n\t\t\t}\t\r\n\r\n\r\n\t\t\tif (letterCounter !== spaceCounter && letterCounter >= 1){\r\n\t\t\t\tstateCopy.postData.unshift(newPost);\r\n\t\t\t}\r\n\t\t\t\tstateCopy.newPostText = '';\r\n\t\t\t\t\r\n\t\t\treturn stateCopy;\r\n\r\n\r\n\t\t\tcase 'SET-USER-PROFILE':\r\n\t\t\treturn {...state, profile: action.profile}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport let onPostChangeActionCreator = (textFromNewPost, paragraph) => {\r\n\tconsole.log(textFromNewPost)\r\n\treturn ({\r\n\t\ttype: 'UPDATE-POST-TEXT',\r\n\t\tnewText: textFromNewPost,\r\n\t\tparagraph: paragraph,\r\n})\r\n}\r\nexport let addPostActionCreator = () => {\r\n\treturn ({\r\n\t\ttype: 'ADD-POST'\r\n\t})\r\n}\r\n\r\nexport let setUserProfile = (profile) => {\r\n\treturn ({\r\n\t\ttype: 'SET-USER-PROFILE', \r\n\t\tprofile\r\n\t})\r\n}\r\n\r\n\r\nexport const getCurrentIdThunkCreator = (currentUserId) => (dispatch) => {\r\n\t\r\n\tusersAPI.getCurrentId(currentUserId)\r\n\t\t.then(data => {\r\n\t\tdispatch(setUserProfile(data));\r\n\t})\r\n}\r\n\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}