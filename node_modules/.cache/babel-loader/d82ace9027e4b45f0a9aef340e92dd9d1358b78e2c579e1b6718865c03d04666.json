{"ast":null,"code":"import { onPostChangeActionCreator, addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport NewPost from \"./NewPost\";\nimport { connect } from 'react-redux';\nimport React from 'react';\n// const NewPostContainer = (props) => {\n// \tlet onPostChange = (textFromNewPost) => {\n// \t\tlet action = onPostChangeActionCreator(textFromNewPost);\n// \t\tprops.dispatch(action);\n// \t}\n// \tlet addPost = () => {\n// \t\tprops.dispatch(addPostActionCreator());\n// \t}\n// \treturn (<NewPost\n// \t\taddPost={addPost}\n// \t\tonPostChangeActionCreator={onPostChange}\n// \t\tnewPostText={props.newPostText} />)\n// }\n\nconst mapStateToProps = state => {\n  return {\n    newPostText: state.profilePage.newPostText\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChangeActionCreator: (textFromNewPost, paragraph) => {\n      let action = onPostChangeActionCreator(textFromNewPost, paragraph);\n      dispatch(action);\n    }\n  };\n};\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost);\nexport default NewPostContainer;","map":{"version":3,"names":["onPostChangeActionCreator","addPostActionCreator","NewPost","connect","React","mapStateToProps","state","newPostText","profilePage","mapDispatchToProps","dispatch","addPost","textFromNewPost","paragraph","action","NewPostContainer"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/Profile/MyPosts/NewPostContainer.jsx"],"sourcesContent":["import { onPostChangeActionCreator, addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\n// const NewPostContainer = (props) => {\r\n// \tlet onPostChange = (textFromNewPost) => {\r\n// \t\tlet action = onPostChangeActionCreator(textFromNewPost);\r\n// \t\tprops.dispatch(action);\r\n// \t}\r\n// \tlet addPost = () => {\r\n// \t\tprops.dispatch(addPostActionCreator());\r\n// \t}\r\n// \treturn (<NewPost\r\n// \t\taddPost={addPost}\r\n// \t\tonPostChangeActionCreator={onPostChange}\r\n// \t\tnewPostText={props.newPostText} />)\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn ({\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t})\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn ({\r\n\t\taddPost: () => {\r\n\t\t\tdispatch(addPostActionCreator());\r\n\t\t},\r\n\r\n\t\tonPostChangeActionCreator: (textFromNewPost, paragraph) => {\r\n\t\t\tlet action = onPostChangeActionCreator(textFromNewPost, paragraph);\r\n\t\t\tdispatch(action);\r\n\t\t},\r\n\t})\r\n}\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost);\r\n\r\nexport default NewPostContainer;\r\n\r\n"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,oBAAoB,QAAQ,gCAAgC;AAChG,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAClC,OAAQ;IACPC,WAAW,EAAED,KAAK,CAACE,WAAW,CAACD;EAChC,CAAC;AACF,CAAC;AAED,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EACxC,OAAQ;IACPC,OAAO,EAAEA,CAAA,KAAM;MACdD,QAAQ,CAACT,oBAAoB,CAAC,CAAC,CAAC;IACjC,CAAC;IAEDD,yBAAyB,EAAEA,CAACY,eAAe,EAAEC,SAAS,KAAK;MAC1D,IAAIC,MAAM,GAAGd,yBAAyB,CAACY,eAAe,EAAEC,SAAS,CAAC;MAClEH,QAAQ,CAACI,MAAM,CAAC;IACjB;EACD,CAAC;AACF,CAAC;AAED,MAAMC,gBAAgB,GAAGZ,OAAO,CAACE,eAAe,EAAEI,kBAAkB,CAAC,CAACP,OAAO,CAAC;AAE9E,eAAea,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}