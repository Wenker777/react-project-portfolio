{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kerim\\\\Desktop\\\\F-end\\\\frontend\\\\react\\\\react-project\\\\react-2\\\\src\\\\js-components\\\\Mainscreen\\\\Dialogs\\\\Dialogs.jsx\";\nimport DialogItem from \"./DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport DialogMessage from \"./DialogsMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  // console.log(props.dialogsElements); //names & nameId\n  // let dialogsData = [\n  // \t{id: 1, name: 'Керим'},\n  // \t{id: 2, name: 'Ильяс'},\n  // \t{id: 3, name: 'Ибраим'},\n  // \t{id: 4, name: 'Ахмад'},\n  // \t{id: 5, name: 'Аким'},\n  // ]\n  let dialogsData = props.dialogsElements.names;\n  console.log(dialogsData);\n  let messagesData = [{\n    id: 1,\n    message: 'Hello, how are you?'\n  }, {\n    id: 2,\n    message: 'Hi, i`m good'\n  }];\n\n  // let dialogsElements = dialogsData.map( d => <DialogItem name={d.names} id={d.nameId}/>) \n  /*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n   далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n   Далее просто вставляем новый массив в нужный участок JSX разметки\r\n   и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\n  let messagesElemets = messagesData.map(m => /*#__PURE__*/_jsxDEV(DialogMessage, {\n    message: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs__row,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__messages,\n      children: messagesElemets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_c = Dialogs;\nexport default Dialogs;\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["DialogItem","s","DialogMessage","jsxDEV","_jsxDEV","Dialogs","props","dialogsData","dialogsElements","names","console","log","messagesData","id","message","messagesElemets","map","m","fileName","_jsxFileName","lineNumber","columnNumber","className","dialogs__row","children","dialogs__items","dialogs__messages","_c","$RefreshReg$"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/Mainscreen/Dialogs/Dialogs.jsx"],"sourcesContent":["import DialogItem from \"./DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogMessage from \"./DialogsMessage\";\r\n\r\nconst Dialogs = (props) => {\r\n\t// console.log(props.dialogsElements); //names & nameId\r\n\t// let dialogsData = [\r\n\t// \t{id: 1, name: 'Керим'},\r\n\t// \t{id: 2, name: 'Ильяс'},\r\n\t// \t{id: 3, name: 'Ибраим'},\r\n\t// \t{id: 4, name: 'Ахмад'},\r\n\t// \t{id: 5, name: 'Аким'},\r\n\t// ]\r\n\tlet dialogsData = props.dialogsElements.names;\r\n\tconsole.log(dialogsData);\r\n\r\n\tlet messagesData = [\r\n\t\t{id: 1, message: 'Hello, how are you?'},\r\n\t\t{id: 2, message: 'Hi, i`m good'},\r\n\t]\r\n\t\r\n\t// let dialogsElements = dialogsData.map( d => <DialogItem name={d.names} id={d.nameId}/>) \r\n\t/*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n\t далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n\t Далее просто вставляем новый массив в нужный участок JSX разметки\r\n\t и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\r\n\tlet messagesElemets = messagesData.map( m => <DialogMessage message={m.message}/>)\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs__row}>\r\n\t\t\t<div className={s.dialogs__items}>\r\n\t\t\t\t{/* {dialogsElements} */}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.dialogs__messages}>\r\n\t\t\t\t{messagesElemets}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIC,WAAW,GAAGD,KAAK,CAACE,eAAe,CAACC,KAAK;EAC7CC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;EAExB,IAAIK,YAAY,GAAG,CAClB;IAACC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAqB,CAAC,EACvC;IAACD,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAc,CAAC,CAChC;;EAED;EACA;AACD;AACA;AACA;EACC,IAAIC,eAAe,GAAGH,YAAY,CAACI,GAAG,CAAEC,CAAC,iBAAIb,OAAA,CAACF,aAAa;IAACY,OAAO,EAAEG,CAAC,CAACH;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EAElF,oBACCjB,OAAA;IAAKkB,SAAS,EAAErB,CAAC,CAACsB,YAAa;IAAAC,QAAA,gBAC9BpB,OAAA;MAAKkB,SAAS,EAAErB,CAAC,CAACwB;IAAe;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC,eACNjB,OAAA;MAAKkB,SAAS,EAAErB,CAAC,CAACyB,iBAAkB;MAAAF,QAAA,EAClCT;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAM,EAAA,GAlCKtB,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}