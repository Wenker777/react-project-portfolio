{"ast":null,"code":"import React from \"react\";\nimport Users from \"./AllFriends\";\nimport { connect } from \"react-redux\";\nimport { follow, getUsersThunkCreator, unfollow } from \"../../redux/users-reducer\";\nimport { getByDisplayValue } from \"@testing-library/react\";\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n// let mapDispatchToProps = (dispatch) =>{\n// \treturn{\n// \t\tfollow: (userId) =>{\n// \t\t\tdispatch(follow(userId));\n// \t\t},\n// \t\tunfollow: (userId) =>{\n// \t\t\tdispatch(unfollow(userId));\n// \t\t},\n// \t\tsetUsers: (users) =>{\n// \t\t\tdispatch(setUsers(users));\n// \t\t},\n// \t\tsetCurrentPage: (currentPage) =>{\n// \t\t\tdispatch(setCurrentPage(currentPage))\n// \t\t},\n// \t\tsetTotalUsersPage: (totalCount) =>{\n// \t\t\tdispatch(setTotalUsersPage(totalCount))\n// \t\t},\n// \t\tsetIsFetching: (toggle) =>{\n// \t\t\tdispatch(isFetching(toggle))\n// \t\t},\n// \t}\n// }\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  getUsersThunkCreator\n})(Users);\nexport default UsersContainer;","map":{"version":3,"names":["React","Users","connect","follow","getUsersThunkCreator","unfollow","getByDisplayValue","mapStateToProps","state","users","usersPage","pageSize","totalUsersCount","currentPage","isFetching","UsersContainer"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/AllFriends/AllFriendsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Users from \"./AllFriends\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, getUsersThunkCreator, unfollow, } from \"../../redux/users-reducer\";\r\nimport { getByDisplayValue } from \"@testing-library/react\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tusers: state.usersPage.users,\r\n\t\tpageSize: state.usersPage.pageSize,\r\n\t\ttotalUsersCount: state.usersPage.totalUsersCount,\r\n\t\tcurrentPage: state.usersPage.currentPage,\r\n\t\tisFetching: state.usersPage.isFetching,\r\n\r\n\t}\r\n}\r\n// let mapDispatchToProps = (dispatch) =>{\r\n// \treturn{\r\n// \t\tfollow: (userId) =>{\r\n// \t\t\tdispatch(follow(userId));\r\n// \t\t},\r\n// \t\tunfollow: (userId) =>{\r\n// \t\t\tdispatch(unfollow(userId));\r\n// \t\t},\r\n// \t\tsetUsers: (users) =>{\r\n// \t\t\tdispatch(setUsers(users));\r\n// \t\t},\r\n// \t\tsetCurrentPage: (currentPage) =>{\r\n// \t\t\tdispatch(setCurrentPage(currentPage))\r\n// \t\t},\r\n// \t\tsetTotalUsersPage: (totalCount) =>{\r\n// \t\t\tdispatch(setTotalUsersPage(totalCount))\r\n// \t\t},\r\n// \t\tsetIsFetching: (toggle) =>{\r\n// \t\t\tdispatch(isFetching(toggle))\r\n// \t\t},\r\n// \t}\r\n// }\r\n\r\nconst UsersContainer = connect(mapStateToProps, { follow, unfollow,\r\n\t getUsersThunkCreator})(Users);\r\n\r\nexport default UsersContainer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,cAAc;AAChC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,EAAEC,oBAAoB,EAAEC,QAAQ,QAAS,2BAA2B;AACnF,SAASC,iBAAiB,QAAQ,wBAAwB;AAE1D,IAAIC,eAAe,GAAIC,KAAK,IAAI;EAC/B,OAAM;IACLC,KAAK,EAAED,KAAK,CAACE,SAAS,CAACD,KAAK;IAC5BE,QAAQ,EAAEH,KAAK,CAACE,SAAS,CAACC,QAAQ;IAClCC,eAAe,EAAEJ,KAAK,CAACE,SAAS,CAACE,eAAe;IAChDC,WAAW,EAAEL,KAAK,CAACE,SAAS,CAACG,WAAW;IACxCC,UAAU,EAAEN,KAAK,CAACE,SAAS,CAACI;EAE7B,CAAC;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGb,OAAO,CAACK,eAAe,EAAE;EAAEJ,MAAM;EAAEE,QAAQ;EAChED;AAAoB,CAAC,CAAC,CAACH,KAAK,CAAC;AAE/B,eAAec,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}