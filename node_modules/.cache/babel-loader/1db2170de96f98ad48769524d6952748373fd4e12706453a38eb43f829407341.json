{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kerim\\\\Desktop\\\\F-end\\\\frontend\\\\react\\\\react-project\\\\react-2\\\\src\\\\js-components\\\\Dialogs\\\\Dialogs.jsx\";\nimport DialogItem from \"./DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport DialogMessage from \"./DialogsMessage\";\nimport WritingMessage from \"./DialogsWritingMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  // let dialogsElements = props.dialogsElements.dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>) \n  // /*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \n  //  далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\n  //  Далее просто вставляем новый массив в нужный участок JSX разметки\n  //  и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\n  // let messagesElements = props.dialogsElements.messagesData.map( m => <DialogMessage message={m.message}/>);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs__row,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__items,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(WritingMessage, {\n        newMessage: props.dialogsElements,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n_c = Dialogs;\nexport default Dialogs;\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["DialogItem","s","DialogMessage","WritingMessage","jsxDEV","_jsxDEV","Dialogs","props","className","dialogs__row","children","dialogs__items","dialogsElements","fileName","_jsxFileName","lineNumber","columnNumber","dialogs__messages","messagesElements","newMessage","dispatch","_c","$RefreshReg$"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/Dialogs/Dialogs.jsx"],"sourcesContent":["import DialogItem from \"./DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogMessage from \"./DialogsMessage\";\r\nimport WritingMessage from \"./DialogsWritingMessage\";\r\nconst Dialogs = (props) => {\r\n\t// let dialogsElements = props.dialogsElements.dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>) \r\n\t// /*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n\t//  далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n\t//  Далее просто вставляем новый массив в нужный участок JSX разметки\r\n\t//  и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\r\n\t// let messagesElements = props.dialogsElements.messagesData.map( m => <DialogMessage message={m.message}/>);\r\n\treturn (\r\n\t\t<div className={s.dialogs__row}>\r\n\t\t\t<div className={s.dialogs__items}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.dialogs__messages}>\r\n\t\t\t\t<div>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t\t</div>\r\n\t\t\t\t<WritingMessage newMessage={props.dialogsElements} dispatch={props.dispatch}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA,oBACCF,OAAA;IAAKG,SAAS,EAAEP,CAAC,CAACQ,YAAa;IAAAC,QAAA,gBAC9BL,OAAA;MAAKG,SAAS,EAAEP,CAAC,CAACU,cAAe;MAAAD,QAAA,EAC/BE;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNX,OAAA;MAAKG,SAAS,EAAEP,CAAC,CAACgB,iBAAkB;MAAAP,QAAA,gBACnCL,OAAA;QAAAK,QAAA,EACCQ;MAAgB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNX,OAAA,CAACF,cAAc;QAACgB,UAAU,EAAEZ,KAAK,CAACK,eAAgB;QAACQ,QAAQ,EAAEb,KAAK,CAACa;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAK,EAAA,GApBKf,OAAO;AAqBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}