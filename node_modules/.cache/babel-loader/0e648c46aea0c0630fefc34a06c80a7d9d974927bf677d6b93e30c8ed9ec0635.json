{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kerim\\\\Desktop\\\\F-end\\\\frontend\\\\react\\\\react-project\\\\react-2\\\\src\\\\js-components\\\\Dialogs\\\\Dialogs.jsx\";\nimport DialogItem from \"./DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport DialogMessage from \"./DialogsMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  let dialogsElements = props.dialogsElements.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 68\n  }, this));\n  /*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n   далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n   Далее просто вставляем новый массив в нужный участок JSX разметки\r\n   и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\n  // let messagesElements = props.dialogsElements.messagesData.map( m => <DialogMessage messageFromMe={m.messageFromMe} messageFromAnother={m.messageFromAnother}/>)\n  // let messagesElements = props.dialogsElements.map( m => <DialogMessage messageFromMe={m.messagesData.message} messageFromAnother={m.messagesAnotherData.message}/>)\n\n  // console.log(messagesElements);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs__row,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__items,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__messages,\n      children: /*#__PURE__*/_jsxDEV(DialogMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n_c = Dialogs;\nexport default Dialogs;\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["DialogItem","s","DialogMessage","jsxDEV","_jsxDEV","Dialogs","props","dialogsElements","dialogsData","map","d","name","id","fileName","_jsxFileName","lineNumber","columnNumber","className","dialogs__row","children","dialogs__items","dialogs__messages","_c","$RefreshReg$"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/Dialogs/Dialogs.jsx"],"sourcesContent":["import DialogItem from \"./DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogMessage from \"./DialogsMessage\";\r\nconst Dialogs = (props) => {\r\n\tlet dialogsElements = props.dialogsElements.dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>) \r\n\t/*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n\t далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n\t Далее просто вставляем новый массив в нужный участок JSX разметки\r\n\t и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\r\n\t// let messagesElements = props.dialogsElements.messagesData.map( m => <DialogMessage messageFromMe={m.messageFromMe} messageFromAnother={m.messageFromAnother}/>)\r\n\t// let messagesElements = props.dialogsElements.map( m => <DialogMessage messageFromMe={m.messagesData.message} messageFromAnother={m.messagesAnotherData.message}/>)\r\n\r\n\t// console.log(messagesElements);\r\n\treturn (\r\n\t\t<div className={s.dialogs__row}>\r\n\t\t\t<div className={s.dialogs__items}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.dialogs__messages}>\r\n\t\t\t\t<DialogMessage/>\r\n\t\t\t\t{/* {messagesElements} */}\r\n\t\t\t\t{/* {messagesAnotherElements} */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAC1B,IAAIC,eAAe,GAAGD,KAAK,CAACC,eAAe,CAACC,WAAW,CAACC,GAAG,CAAEC,CAAC,iBAAIN,OAAA,CAACJ,UAAU;IAACW,IAAI,EAAED,CAAC,CAACC,IAAK;IAACC,EAAE,EAAEF,CAAC,CAACE;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EACxG;AACD;AACA;AACA;EACC;EACA;;EAEA;EACA,oBACCZ,OAAA;IAAKa,SAAS,EAAEhB,CAAC,CAACiB,YAAa;IAAAC,QAAA,gBAC9Bf,OAAA;MAAKa,SAAS,EAAEhB,CAAC,CAACmB,cAAe;MAAAD,QAAA,EAC/BZ;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNZ,OAAA;MAAKa,SAAS,EAAEhB,CAAC,CAACoB,iBAAkB;MAAAF,QAAA,eACnCf,OAAA,CAACF,aAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAM,EAAA,GAtBKjB,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}