{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kerim\\\\Desktop\\\\F-end\\\\frontend\\\\react\\\\react-project\\\\react-2\\\\src\\\\js-components\\\\Dialogs\\\\Dialogs.jsx\";\nimport DialogItem from \"./DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport DialogMessage from \"./DialogsMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  let dialogsData = props.dialogsElements;\n  let messagesData = props.messagesElements;\n  let dialogsElements = dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 46\n  }, this));\n  /*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n   далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n   Далее просто вставляем новый массив в нужный участок JSX разметки\r\n   и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\n  let messagesElemets = messagesData.map(m => /*#__PURE__*/_jsxDEV(DialogMessage, {\n    message: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs__row,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__items,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs__messages,\n      children: messagesElemets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n_c = Dialogs;\nexport default Dialogs;\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["DialogItem","s","DialogMessage","jsxDEV","_jsxDEV","Dialogs","props","dialogsData","dialogsElements","messagesData","messagesElements","map","d","name","id","fileName","_jsxFileName","lineNumber","columnNumber","messagesElemets","m","message","className","dialogs__row","children","dialogs__items","dialogs__messages","_c","$RefreshReg$"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/js-components/Dialogs/Dialogs.jsx"],"sourcesContent":["import DialogItem from \"./DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogMessage from \"./DialogsMessage\";\r\n\r\nconst Dialogs = (props) => {\r\n\tlet dialogsData = props.dialogsElements;\r\n\tlet messagesData = props.messagesElements;\r\n\t\r\n\tlet dialogsElements = dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>) \r\n\t/*Создаем новую переменную в которую присваиваем преобразование массива данных применяя метод .map \r\n\t далее объявляем стрелочную ф-ию => и пишем компоненту внутри неё прописываем атрибуты name & id которые достаем из названия ф-ии.\r\n\t Далее просто вставляем новый массив в нужный участок JSX разметки\r\n\t и он отобразит максимальное колличество элементов в случае dialogsData их будет 5*/\r\n\tlet messagesElemets = messagesData.map( m => <DialogMessage message={m.message}/>)\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs__row}>\r\n\t\t\t<div className={s.dialogs__items}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.dialogs__messages}>\r\n\t\t\t\t{messagesElemets}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAC1B,IAAIC,WAAW,GAAGD,KAAK,CAACE,eAAe;EACvC,IAAIC,YAAY,GAAGH,KAAK,CAACI,gBAAgB;EAEzC,IAAIF,eAAe,GAAGD,WAAW,CAACI,GAAG,CAAEC,CAAC,iBAAIR,OAAA,CAACJ,UAAU;IAACa,IAAI,EAAED,CAAC,CAACC,IAAK;IAACC,EAAE,EAAEF,CAAC,CAACE;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EAClF;AACD;AACA;AACA;EACC,IAAIC,eAAe,GAAGV,YAAY,CAACE,GAAG,CAAES,CAAC,iBAAIhB,OAAA,CAACF,aAAa;IAACmB,OAAO,EAAED,CAAC,CAACC;EAAQ;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EAElF,oBACCd,OAAA;IAAKkB,SAAS,EAAErB,CAAC,CAACsB,YAAa;IAAAC,QAAA,gBAC9BpB,OAAA;MAAKkB,SAAS,EAAErB,CAAC,CAACwB,cAAe;MAAAD,QAAA,EAC/BhB;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNd,OAAA;MAAKkB,SAAS,EAAErB,CAAC,CAACyB,iBAAkB;MAAAF,QAAA,EAClCL;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAS,EAAA,GArBKtB,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}