{"ast":null,"code":"// import React from \"react\"\n// import { connect } from \"react-redux\"\n// import { Navigate } from \"react-router-dom\"\n// let mapStateToPropsForRedirect = (state) =>({\n// \tauth: state.auth.isAuth, \n// })\n// export const withAuthRedirect = (Component) => {\n// \tconst RedirectComponent = (props) =>{\n//       if(!props.auth) {\n//         return <Navigate to={'/login'}/>;\n//       }\n//     return <Component {...props}/>\n// \t}\n\n//  let ConnectedRedirectComponet = connect(mapStateToPropsForRedirect)(RedirectComponent)\n//  return ConnectedRedirectComponet;\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/hoc/WithAuthRedirect.js"],"sourcesContent":["// import React from \"react\"\r\n// import { connect } from \"react-redux\"\r\n// import { Navigate } from \"react-router-dom\"\r\n// let mapStateToPropsForRedirect = (state) =>({\r\n// \tauth: state.auth.isAuth, \r\n// })\r\n// export const withAuthRedirect = (Component) => {\r\n// \tconst RedirectComponent = (props) =>{\r\n//       if(!props.auth) {\r\n//         return <Navigate to={'/login'}/>;\r\n//       }\r\n//     return <Component {...props}/>\r\n// \t}\r\n\r\n//  let ConnectedRedirectComponet = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n//  return ConnectedRedirectComponet;\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}