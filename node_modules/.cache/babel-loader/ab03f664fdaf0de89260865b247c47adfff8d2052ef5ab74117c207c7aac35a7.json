{"ast":null,"code":"import { usersAPI } from \"../API/api\";\nlet initialState = {\n  postData: [{\n    id: 1,\n    likes: 15,\n    message: 'Hello, what`s your name and how old are you?'\n  }, {\n    id: 2,\n    likes: 20,\n    message: 'Hi, my name is Kerim and i`m 20 y.o.'\n  }],\n  newPostText: '',\n  profile: null\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // Изначально под именем state пришел profilePage при удовлетворении условия if он преобразовывается и возвращается через тот-же state\n  // rerender происходит не здесь\n\n  let stateCopy;\n  switch (action.type) {\n    case 'UPDATE-POST-TEXT':\n      stateCopy = {\n        ...state,\n        newPostText: action.newText\n      };\n      // stateCopy.newPostText = action.newText;\n      return stateCopy;\n    case 'ADD-POST':\n      stateCopy = {\n        ...state,\n        postData: [...state.postData],\n        newPostText: {\n          ...state.newPostText\n        }\n      };\n      let newPost = {\n        id: 3,\n        likes: 0,\n        message: state.newPostText\n      };\n      stateCopy.postData.unshift(newPost);\n      stateCopy.newPostText = '';\n      return stateCopy;\n    case 'SET-USER-PROFILE':\n      return {\n        ...state,\n        profile: action.profile\n      };\n    default:\n      return state;\n  }\n};\nexport let onPostChangeActionCreator = textFromNewPost => {\n  return {\n    type: 'UPDATE-POST-TEXT',\n    newText: textFromNewPost\n  };\n};\nexport let addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport let setUserProfile = profile => {\n  return {\n    type: 'SET-USER-PROFILE',\n    profile\n  };\n};\nexport const getCurrentIdThunkCreator = dispatch => {\n  usersAPI.getCurrentId(currentUserId).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["usersAPI","initialState","postData","id","likes","message","newPostText","profile","profileReducer","state","arguments","length","undefined","action","stateCopy","type","newText","newPost","unshift","onPostChangeActionCreator","textFromNewPost","addPostActionCreator","setUserProfile","getCurrentIdThunkCreator","dispatch","getCurrentId","currentUserId","then","data"],"sources":["C:/Users/Kerim/Desktop/F-end/frontend/react/react-project/react-2/src/redux/profile-reducer.js"],"sourcesContent":["import { usersAPI } from \"../API/api\";\r\nlet initialState = {\r\n\tpostData: [\r\n\t\t{ id: 1, likes: 15, message: 'Hello, what`s your name and how old are you?' },\r\n\t\t{ id: 2, likes: 20, message: 'Hi, my name is Kerim and i`m 20 y.o.' },\r\n\t],\r\n\tnewPostText: '',\r\n\tprofile: null,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => { // Изначально под именем state пришел profilePage при удовлетворении условия if он преобразовывается и возвращается через тот-же state\r\n\t// rerender происходит не здесь\r\n\r\n\tlet stateCopy;\r\n\tswitch (action.type) {\r\n\t\tcase 'UPDATE-POST-TEXT':\r\n\t\t\tstateCopy = {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewPostText: action.newText,\r\n\t\t\t};\r\n\t\t\t// stateCopy.newPostText = action.newText;\r\n\t\t\treturn stateCopy;\r\n\r\n\t\tcase 'ADD-POST':\r\n\t\t\tstateCopy = {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostData: [...state.postData],\r\n\t\t\t\tnewPostText: {...state.newPostText},\r\n\t\t\t};\r\n\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 3,\r\n\t\t\t\tlikes: 0,\r\n\t\t\t\tmessage: state.newPostText,\r\n\t\t\t}\t\r\n\t\t\t\tstateCopy.postData.unshift(newPost);\r\n\t\t\t\tstateCopy.newPostText = '';\r\n\t\t\treturn stateCopy;\r\n\r\n\r\n\t\t\tcase 'SET-USER-PROFILE':\r\n\t\t\treturn {...state, profile: action.profile}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport let onPostChangeActionCreator = (textFromNewPost) => {\r\n\treturn ({\r\n\t\ttype: 'UPDATE-POST-TEXT',\r\n\t\tnewText: textFromNewPost,\r\n})\r\n}\r\nexport let addPostActionCreator = () => {\r\n\treturn ({\r\n\t\ttype: 'ADD-POST'\r\n\t})\r\n}\r\n\r\nexport let setUserProfile = (profile) => {\r\n\treturn ({\r\n\t\ttype: 'SET-USER-PROFILE', \r\n\t\tprofile\r\n\t})\r\n}\r\n\r\n\r\nexport const getCurrentIdThunkCreator = (dispatch) => {\r\n\tusersAPI.getCurrentId(currentUserId)\r\n\t\t.then(data => {\r\n\t\tdispatch(setUserProfile(data));\r\n\t})\r\n}\r\n\r\nexport default profileReducer;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,IAAIC,YAAY,GAAG;EAClBC,QAAQ,EAAE,CACT;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAA+C,CAAC,EAC7E;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAuC,CAAC,CACrE;EACDC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE;AACV,CAAC;AAED,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,YAAY;EAAA,IAAEY,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAO;EAC1D;;EAEA,IAAIE,SAAS;EACb,QAAQD,MAAM,CAACE,IAAI;IAClB,KAAK,kBAAkB;MACtBD,SAAS,GAAG;QACX,GAAGL,KAAK;QACRH,WAAW,EAAEO,MAAM,CAACG;MACrB,CAAC;MACD;MACA,OAAOF,SAAS;IAEjB,KAAK,UAAU;MACdA,SAAS,GAAG;QACX,GAAGL,KAAK;QACRP,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAQ,CAAC;QAC7BI,WAAW,EAAE;UAAC,GAAGG,KAAK,CAACH;QAAW;MACnC,CAAC;MAED,IAAIW,OAAO,GAAG;QACbd,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAEI,KAAK,CAACH;MAChB,CAAC;MACAQ,SAAS,CAACZ,QAAQ,CAACgB,OAAO,CAACD,OAAO,CAAC;MACnCH,SAAS,CAACR,WAAW,GAAG,EAAE;MAC3B,OAAOQ,SAAS;IAGhB,KAAK,kBAAkB;MACvB,OAAO;QAAC,GAAGL,KAAK;QAAEF,OAAO,EAAEM,MAAM,CAACN;MAAO,CAAC;IAG3C;MACC,OAAOE,KAAK;EACd;AACD,CAAC;AAED,OAAO,IAAIU,yBAAyB,GAAIC,eAAe,IAAK;EAC3D,OAAQ;IACPL,IAAI,EAAE,kBAAkB;IACxBC,OAAO,EAAEI;EACX,CAAC;AACD,CAAC;AACD,OAAO,IAAIC,oBAAoB,GAAGA,CAAA,KAAM;EACvC,OAAQ;IACPN,IAAI,EAAE;EACP,CAAC;AACF,CAAC;AAED,OAAO,IAAIO,cAAc,GAAIf,OAAO,IAAK;EACxC,OAAQ;IACPQ,IAAI,EAAE,kBAAkB;IACxBR;EACD,CAAC;AACF,CAAC;AAGD,OAAO,MAAMgB,wBAAwB,GAAIC,QAAQ,IAAK;EACrDxB,QAAQ,CAACyB,YAAY,CAACC,aAAa,CAAC,CAClCC,IAAI,CAACC,IAAI,IAAI;IACdJ,QAAQ,CAACF,cAAc,CAACM,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC;AACH,CAAC;AAED,eAAepB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}